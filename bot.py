import os
import logging
import json
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext, MessageHandler, Filters
from flask import Flask
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask
app = Flask(__name__)

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
TOKEN = os.environ.get("BOT_TOKEN")
WEBHOOK_URL = os.environ.get("WEBHOOK_URL")
PORT = int(os.environ.get("PORT", 443))
GOOGLE_CREDENTIALS = os.environ.get("GOOGLE_CREDENTIALS")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not WEBHOOK_URL:
    logger.error("WEBHOOK_URL –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    raise ValueError("WEBHOOK_URL –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
if not TOKEN:
    logger.error("BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    raise ValueError("BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
if not GOOGLE_CREDENTIALS:
    logger.error("GOOGLE_CREDENTIALS –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    raise ValueError("GOOGLE_CREDENTIALS –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets ---
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è `sheet`
sheet = None
try:
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_dict(json.loads(GOOGLE_CREDENTIALS), scope)
    client = gspread.authorize(creds)
    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ "MovieDatabase" - —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –∞ sheet1 - –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
    sheet = client.open("MovieDatabase").sheet1
    logger.info("Google Sheets —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Sheets: {e}")
    # –í–∞–∂–Ω–æ –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å raise –∑–¥–µ—Å—å, –µ—Å–ª–∏ –±–æ—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Sheets
    # –ù–æ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∫–∞–∫ –∑–¥–µ—Å—å, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å raise
    raise

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–∞–Ω–∞–ª–æ–≤ (–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ) ---
# –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –µ—Å—Ç—å, –Ω–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏–∑ —Ñ–∞–π–ª–∞/–ë–î
CHANNELS = [
    "-1002657330561", # –ü—Ä–∏–º–µ—Ä ID –∫–∞–Ω–∞–ª–∞
    "-1002243633174",
    "-1002484534545",
    "-1002578865225",
    "-1002617434713",
]

# URL-–∞–¥—Ä–µ—Å–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ (–ª—É—á—à–µ —Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ç–æ–π –∂–µ —Ç–∞–±–ª–∏—Ü–µ Sheets)
CHANNEL_BUTTONS = [
    {"text": "–ö–∞–Ω–∞–ª 1 ‚Äî –°–º–æ—Ç—Ä–∏ –Ω–æ–≤–∏–Ω–∫–∏", "url": "https://t.me/+8qO35jVzZVs5MjMy"},
    {"text": "–ö–∞–Ω–∞–ª 2 ‚Äî –õ—É—á—à–µ —Ñ–∏–ª—å–º—ã", "url": "https://t.me/+ZAvb9OTIrU9mOWIy"},
    {"text": "–ö–∞–Ω–∞–ª 3 ‚Äî –ü—Ä–µ–º–∏–∏ –∏ —Ö–∏—Ç—ã", "url": "https://t.me/+PAu2GRMZuUU0ZWQy"},
    {"text": "–ö–∞–Ω–∞–ª 4 ‚Äî –ö–∏–Ω–æ –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã", "url": "https://t.me/+kO2CPJZgxediMmZi"},
    {"text": "–ö–∞–Ω–∞–ª 5 ‚Äî –≠–∫—Å–∫–ª—é–∑–∏–≤—ã", "url": "https://t.me/+DUDDSAYIDl8yN2Ni"},
]

# –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ URL (healthcheck)
@app.route('/')
def health_check():
    return "Bot is alive", 200

def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user = update.message.from_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} {user.first_name} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.")
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! üëã\n"
        "–ù–∞–ø–∏—à–∏ –∫–æ–¥ —Ñ–∏–ª—å–º–∞, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ. üé¨\n\n"
    )
    update.message.reply_text(welcome_text)

def prompt_subscribe(update: Update, context: CallbackContext, message_id=None) -> None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª—ã.
    –ú–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤–æ–µ.
    """
    promo_text = (
        "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à–∏—Ö —Å–ø–æ–Ω—Å–æ—Ä–æ–≤!\n"
        "–ö–æ–≥–¥–∞ —Å–¥–µ–ª–∞–µ—à—å –≤—Å—ë, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –∏ –º—ã –ø—Ä–æ–¥–æ–ª–∂–∏–º!"
    )
    keyboard = []
    for btn_info in CHANNEL_BUTTONS:
        keyboard.append([InlineKeyboardButton(btn_info["text"], url=btn_info["url"])])
    keyboard.append([InlineKeyboardButton("‚úÖ –Ø –ü–û–î–ü–ò–°–ê–õ–°–Ø!", callback_data="check_subscription")])
    reply_markup = InlineKeyboardMarkup(keyboard)

    if message_id:
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ —ç—Ç–æ callback-–∑–∞–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä)
        try:
            context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=message_id,
                text=promo_text,
                reply_markup=reply_markup
            )
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id}: {e}. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ.")
            update.effective_message.reply_text(promo_text, reply_markup=reply_markup)
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        update.message.reply_text(promo_text, reply_markup=reply_markup)

def check_subscription(update: Update, context: CallbackContext) -> None:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã."""
    query = update.callback_query
    query.answer() # –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback-–∑–∞–ø—Ä–æ—Å
    user_id = query.from_user.id
    bot = context.bot
    all_subscribed = True
    failed_channel = None

    for channel_id in CHANNELS:
        try:
            member = bot.get_chat_member(chat_id=channel_id, user_id=user_id)
            if member.status not in ["member", "administrator", "creator"]:
                all_subscribed = False
                failed_channel = channel_id # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º, –Ω–∞ –∫–∞–∫–æ–π –∫–∞–Ω–∞–ª –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
                break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª {channel_id}: {e}")
            all_subscribed = False
            failed_channel = channel_id
            break

    if all_subscribed:
        context.user_data['subscribed'] = True
        query.message.reply_text(
            "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã.\n"
            "–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ —Ñ–∏–ª—å–º–∞, –∏ —è –Ω–∞–π–¥—É –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ! üçø"
        )
        # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞, –º–æ–∂–Ω–æ –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
        if 'pending_movie_code' in context.user_data:
            code = context.user_data.pop('pending_movie_code')
            handle_movie_code_internal(query.message, context, code) # –í—ã–∑—ã–≤–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    else:
        # –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–ø–æ–¥–ø–∏—Å–∫–µ
        error_message = (
            "üòï –ü–æ—Ö–æ–∂–µ, —Ç—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–µ –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å –µ—â—ë —Ä–∞–∑ –∏ –Ω–∞–∂–º–∏ '‚úÖ –Ø –ü–û–î–ü–ò–°–ê–õ–°–Ø!'.\n"
        )
        if failed_channel:
            error_message += f"–í–æ–∑–º–æ–∂–Ω–æ, —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª —Å ID: `{failed_channel}`." # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        query.message.reply_text(error_message, parse_mode='Markdown')
        # –°–Ω–æ–≤–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∏–º
        prompt_subscribe(update, context, message_id=query.message.message_id)


def find_movie_by_code(code: str) -> dict:
    """–ò—â–µ—Ç —Ñ–∏–ª—å–º –ø–æ –∫–æ–¥—É –≤ Google Sheets."""
    if sheet is None:
        logger.error("Google Sheets –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫.")
        return None # –í–æ–∑–≤—Ä–∞—â–∞–µ–º None, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞

    try:
        # –î–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –æ—Å–æ–±–µ–Ω–Ω–æ —Å –±–æ–ª—å—à–∏–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏,
        # –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `get_all_values()` –∏ –∏—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é,
        # –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å `gspread` –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏ –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º,
        # –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å—Å—è.
        # –ó–¥–µ—Å—å –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ "–ö–æ–¥" –∏ "–ù–∞–∑–≤–∞–Ω–∏–µ" —Ç–æ—á–Ω–æ –µ—Å—Ç—å.
        data = sheet.get_all_records()
        for row in data:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º .get() –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–ª—é—á–∞–º
            if str(row.get("–ö–æ–¥")) == code: # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–¥ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                return {"code": row.get("–ö–æ–¥"), "title": row.get("–ù–∞–∑–≤–∞–Ω–∏–µ")}
        return None
    except gspread.exceptions.APIError as e:
        logger.error(f"–û—à–∏–±–∫–∞ API Google Sheets –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ: {e}")
        return None
    except Exception as e:
        logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ Google Sheets: {e}")
        return None

def handle_movie_code_internal(message, context: CallbackContext, code: str) -> None:
    """–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–¥–∞ —Ñ–∏–ª—å–º–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –∏–∑ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç."""
    movie = find_movie_by_code(code)
    if movie:
        message.reply_text(f"üé• –§–∏–ª—å–º: *{movie['title']}*", parse_mode='Markdown')
    else:
        message.reply_text(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ñ–∏–ª—å–º —Å –∫–æ–¥–æ–º `{code}` –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π –∫–æ–¥.", parse_mode='Markdown')

def handle_movie_code(update: Update, context: CallbackContext) -> None:
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–æ–¥–æ–º —Ñ–∏–ª—å–º–∞."""
    code = update.message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á–∏—Å–ª–æ –ª–∏ —ç—Ç–æ, —á—Ç–æ–±—ã –æ—Ç—Å–µ—è—Ç—å –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if not code.isdigit():
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥ —Ñ–∏–ª—å–º–∞. üî¢")
        return

    if not context.user_data.get('subscribed'):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –µ–≥–æ –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏
        context.user_data['pending_movie_code'] = code
        prompt_subscribe(update, context)
        return

    handle_movie_code_internal(update.message, context, code)

def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(check_subscription, pattern="check_subscription"))
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–µ –∫–æ–º–∞–Ω–¥—ã
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command & Filters.regex(r'^\d+$'), handle_movie_code))
    # –î–æ–±–∞–≤–ª—è–µ–º fallback –¥–ª—è –Ω–µ—á–∏—Å–ª–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, lambda u, c: u.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ *—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–π* –∫–æ–¥ —Ñ–∏–ª—å–º–∞. üî¢", parse_mode='Markdown')))


    full_webhook_url = f"{WEBHOOK_URL}/{TOKEN}"
    logger.info(f"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ –Ω–∞: {full_webhook_url}")
    logger.info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–∞: {PORT}")

    try:
        updater.start_webhook(
            listen="0.0.0.0",
            port=PORT,
            url_path=TOKEN,
            webhook_url=full_webhook_url,
            # drop_pending_updates=True # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å, —á—Ç–æ–±—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        )
        logger.info("–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±—Ö—É–∫: {e}")
        # –ï—Å–ª–∏ –≤–µ–±—Ö—É–∫ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.
        # –í –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫—Ä–∏—Ç–∏—á–Ω–æ.
        raise

    # Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –≤–µ–±—Ö—É–∫–∞
    # –í production-—Å—Ä–µ–¥–µ `app.run` –æ–±—ã—á–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ.
    # –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ Flask –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é Gunicorn/uWSGI/etc.
    # –ù–æ –¥–ª—è Heroku –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º, –≥–¥–µ gunicorn/uwsgi –∑–∞–ø—É—Å–∫–∞–µ—Ç Flask,
    # –∏ `Updater` –ø—Ä–æ—Å—Ç–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç –≤–µ–±—Ö—É–∫, —Ç–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.
    # –ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —ç—Ç—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à —Ö–æ—Å—Ç–∏–Ω–≥
    # –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç Python-—Å–∫—Ä–∏–ø—Ç.
    logger.info("–ó–∞–ø—É—Å–∫ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    app.run(host='0.0.0.0', port=PORT)

if __name__ == "__main__":
    main()